@model CinemaApp.Application.CinemaApp.TicketDto

@{
    ViewData["Title"] = "Create";
}

<h1 class="text-light">Create new ticket</h1>

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <div>
                <h2 class="text-center">Wybierz miejsca w kinie</h2>
                <div class="seating">
                    <!-- Seats will be generated here -->
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <p class="text-light"><strong>Movie Title:</strong> @Model.MovieTitle</p>
            <p class="text-light"><strong>Language:</strong> @Model.Language</p>
            <p class="text-light"><strong>Duration:</strong> @Model.Duration</p>
            <p class="text-light"><strong>Start Time:</strong> @Model.StartTime</p>
            <p class="text-light"><strong>Hall Number:</strong> @Model.HallNumber</p>
            <div class="selected-seats">
                <h3 class="text-light">Wybrane miejsca:</h3>
                <ul id="selected-seats-list"></ul>
            </div>
            <br />
            <div id="CreateTicketModal">
                <form asp-action="Create" id="ticket-form">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="MovieTitle" value="@Model.MovieTitle" />
                    <input type="hidden" asp-for="Language" value="@Model.Language" />
                    <input type="hidden" asp-for="Duration" value="@Model.Duration" />
                    <input type="hidden" asp-for="StartTime" name="startTime" value="@Model.StartTime" />
                    <input type="hidden" id="hallNumber" asp-for="HallNumber" value="@Model.HallNumber" />
                    <input type="hidden" id="selected-seats" name="selectedSeatNumbers" />
                    <input type="hidden" id="selected-rows" name="selectedRowNumbers" />
                    <div class="form-group">
                        <label asp-for="NormalPriceSeats" class="control-label text-light">Ilość biletów normalnych:</label>
                        <div class="input-group">
                            <button type="button" class="btn btn-danger btn-square" id="decreaseNormal">-</button>
                            <input type="text" asp-for="NormalPriceSeats" class="form-control" id="normalPriceSeats" />
                            <button type="button" class="btn btn-success btn-square" id="increaseNormal">+</button>
                        </div>
                    </div>
                    <div class="form-group">
                        <label asp-for="ReducedPriceSeats" class="control-label text-light">Ilość biletów ulgowych:</label>
                        <div class="input-group">
                            <button type="button" class="btn btn-danger btn-square" id="decreaseReduced">-</button>
                            <input type="text" asp-for="ReducedPriceSeats" class="form-control" id="reducedPriceSeats" />
                            <button type="button" class="btn btn-success btn-square" id="increaseReduced">+</button>
                        </div>
                    </div>
                    <div class="form-group">
                        <input type="submit" id="submitButton" value="Create" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col">
            <a asp-action="Index" class="text-light">Back to List</a>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <link rel="stylesheet" href="~/css/Ticket/CreateTicketStyleSheet.css" />
    <script src="~/js/CinemaApp/Ticket/SeatManager.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const decreaseButtons = document.querySelectorAll(".btn-danger");
            const increaseButtons = document.querySelectorAll(".btn-success");

            decreaseButtons.forEach(button => {
                button.addEventListener("click", function () {
                    const inputField = this.nextElementSibling;
                    let value = parseInt(inputField.value);
                    if (value > 0) {
                        value--;
                        inputField.value = value;
                    }
                });
            });

            increaseButtons.forEach(button => {
                button.addEventListener("click", function () {
                    const inputField = this.previousElementSibling;
                    let value = parseInt(inputField.value);
                    value++;
                    inputField.value = value;
                });
            });
        });
    </script>
}